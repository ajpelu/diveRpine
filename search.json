[{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ajpelu.github.io/diveRpine/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Antonio J. Pérez-Luque  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. diveRpine Copyright (C) 2020 Antonio J. Pérez-Luque This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How diveRpine runs?. Detailed manual","text":"detailed description functioning app diveRpine package. add notes modify customize app. ’s live document.","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"landscape-configuration","dir":"Articles","previous_headings":"","what":"Landscape configuration","title":"How diveRpine runs?. Detailed manual","text":"first step creating virtual landscape different land-uses. default diveRpine uses four different land-uses: pine plantation, natural forest, cropland others. create virtual landscape, diveRpine uses auxiliary function create_landscape(). generates raster 13356 ncell (106 rows 126 cols) (Figure 1). Figure 1: Empty virtual landscape.","code":"library(diveRpine)  library(tidyverse)  library(raster)  library(landscapeR)  library(knitr)  library(kableExtra)  library(sf)  library(viridis) empty_landscape <- diveRpine::create_landscape() plot(empty_landscape, legend = FALSE, col = \"#FFFFe5\")"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"target-pine-plantation","dir":"Articles","previous_headings":"Landscape configuration","what":"Target pine-plantation","title":"How diveRpine runs?. Detailed manual","text":"next step configure target pine-plantation. user specify several features target pine-plantation: Pine plantation size (pp_size) Pine plantation tree density (pp_den): low, medium high. Past land use (pp_use): oak forests, shrublands, pasture croplands Climate-proxy Factors: Elevation (elev) Annual radiation (rad) instance, user select pine plantation size 1000 ha (pp_size) low tree density (< 500 tree/ha). land use previous establishment pine plantation Natural Forest (oak). target pine plantation located 1400 m..s.l. annual radiation 4.5 GJm-2. app creates pine plantation patch, features selected users (Figure 2). Figure 2: Pine plantation created user.","code":"# Here there are some inputs needed for manual rendering (#not run) input <- list()  # Select pine size pp_size <- 1000 pp_den <- \"low\"  pp_den_den <- 100  pp_use <- \"Oak\" elev <- 1400 rad <- 4.5  input$pp_size <- pp_size # position position_pine <- matrix(   c(     nrow(empty_landscape) / 2,     ncol(empty_landscape) / 2   ),   ncol = 2, nrow = 1 ) # Create pine plantation target pine <- landscapeR::makePatch(empty_landscape,   val = 1, rast = TRUE, bgr = 0,   size = input$pp_size,   spt = position_pine )  plot(pine, legend = FALSE, axes = FALSE, col = c(\"#FFFFe5\", \"#a1d99b\"))"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"natural-forests","dir":"Articles","previous_headings":"Landscape configuration","what":"Natural forests","title":"How diveRpine runs?. Detailed manual","text":", several natural forests patches created according user selection. , position natural forests established using free background space. position(s) depends number natural forest patch selected users. instance, user select 5 natural forest patches (nf_n) size range 100-200 ha (nf_size). , user select range sizes natural forests patches. Natural forest patches added virtual landscape (Figure 3). Figure 3: Pine plantation (ligth green) natural forests (green) patches created user. Figure 4: Landscape configuration.","code":"#### Get the positions for the creation of the NF patches. nf_n <- 5 input$nf_n <- nf_n  #### Get the positions for the creation of the NF patches. positions_nf <-   sample(     which(t(raster::as.matrix(pine) == 0)), nf_n   )   #### Generate the sizes of the natural forests patch nf_size <- c(100, 200) input$nf_size <- nf_size nf_sizes <-   round(     runif(       nf_n,       input$nf_size[1],       input$nf_size[2]     ),     digits = 0   ) ##   pine_oak pine_oak <- makeClass(pine,   val = 2, rast = TRUE,   npatch = nf_n,   pts = positions_nf,   size = nf_sizes ) plot(pine_oak, legend = FALSE, axes = FALSE,       col = c(\"#FFFFe5\", \"#a1d99b\", \"green\")) crops_size <-   sample(     10:ceiling(       length(which(t(raster::as.matrix(pine_oak)) == 0)) * 0.05     ),     size = n_crops   )  landscape <-   makeClass(pine_oak,     val = 3, rast = TRUE,     npatch = n_crops,     size = crops_size   )  plot(landscape,   legend = FALSE, axes = FALSE,   col = c(\"#FFFFe5\", \"#a1d99b\", \"green\", \"lightgoldenrod1\") )"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"crops","dir":"Articles","previous_headings":"Landscape configuration","what":"Crops","title":"How diveRpine runs?. Detailed manual","text":"Now, crop patches added virtual landscape resulting first configuration landscape (Figure 4).","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"compute-initial-richness","dir":"Articles","previous_headings":"","what":"Compute initial richness","title":"How diveRpine runs?. Detailed manual","text":"richness value assigned pixel. value depend pixel category (.e. natural forest, pine plantation, etc).","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"pine-plantation","dir":"Articles","previous_headings":"Compute initial richness","what":"Pine plantation","title":"How diveRpine runs?. Detailed manual","text":"pixel \\(j\\), initial richness value (\\(R_{init,j}\\)) computed following \\[ Richess \\sim Potential\\ Richenss \\times fc \\] \\(Potential\\ Richenss\\) random value coming range values obtained references study area (Gómez-Aparicio et al. 2009, Pérez-Luque et al. 2014); \\(fc\\) correction factor considers: \\[fc = w_{past}\\cdot f(\\mathrm{past~Land~Use}) + w_{dist}\\cdot f(\\mathrm{Seed~source~distance}) + w_{treeden}\\cdot f(\\mathrm{Tree~density}) + w_{clim}\\cdot f(\\mathrm{Climate~proxy})\\] specified following weights according literature (Gómez-Aparicio et al. 2009, Navarro-González et al. 2013, Pérez-Luque et al. 2014): \\(w_{past} = 0.2\\) \\(w_{dist} = 0.35\\) \\(w_{treeden} = 0.25\\) \\(w_{clim} = 0.2\\)","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"tree-density-ftreeden","dir":"Articles","previous_headings":"Compute initial richness > Pine plantation","what":"Tree Density (ftreeden)","title":"How diveRpine runs?. Detailed manual","text":"Richness species diversity within pine plantation strongly conditioned tree density (Gómez-Aparicio et al. 2009). Tree Density pine plantation negative effect plant diversity, total plant species richness. increase plantation tree density provokes decreasing richness plant values (Gómez-Aparicio et al. 2009). study area, lower diversity plant species observed pine plantations probably due high tree density pine plantations compared natural forests, implies lower light levels canopy, implies lower diversity herbaceous species. addition, abundance richness disperses birds negatively affected high tree densities (especially jays), reducing flow seeds entering pine plantations, thus potential plant species diversity within . , potential richness affected pine forest density. Thus, according Eq. 3 Gómez-Aparicio et al. (2009), potential richness affected function density, follows: \\[ ftreeden = \\exp \\left [ -\\frac{1}{2} \\left( \\frac{ treeDensity - 0.22} {1504.1} \\right )^2\\right ] \\]","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"seed-source-distance-fdist","dir":"Articles","previous_headings":"Compute initial richness > Pine plantation","what":"Seed source distance (fdist)","title":"How diveRpine runs?. Detailed manual","text":"Seed dispersal depends distance seed source (Hewitt Kellman 2002). pine plantations, presence abundance species pines determined, among others, distance seed source (González-Moreno et al. 2011), although reason explains diversity observed pine plantations. González-Moreno et al. (2011) found , different vegetation types considered study , natural oak forests influential terms distance seed source. Oak vegetation higher plant diversity pine plantations,especially herbaceous species (Gómez-Aparicio et al. 2009). Shorter distances increase pool species pine plantations reduce evenness plantation communities. Specifically, relationship found distance source diversity observed pine plantations governed following equation: \\[ Diversity = 1.7605 - 0.0932 * \\sqrt{\\sqrt{Distance}}\\] , pixel pine plantation distances centroid pixel edge natural forest patches computed using function dist2nf() (Figure 5). Figure 5: Distance natural forests’s pixels pine plantation’s pixels. , compute distance effect diversity landscape (Figure 6), focus pine plantations (Figure 7). can see pixels close natural forest patches higher values diversity. Figure 6: Distance effect diversity according Gonzalez-Moreno et al. (2011). Figure 7: Distance effect diversity pine plantation according Gonzalez-Moreno et al. (2011). scaled distance effect 0 1 (Figure 8). Figure 8: Distance effect (scaled values) diversity pine plantation according Gonzalez-Moreno et al. (2011).","code":"dist_raster <- dist2nf(landscape)  borde_pine <- rasterToPolygons(landscape,   fun = function(x) {     x == 1   }, dissolve = TRUE )  nf_edges <- rasterToPolygons(landscape, fun = function(x) {   x == nf_value }, dissolve = TRUE)   plot(dist_raster, col = magma(25, direction = -1)) plot(borde_pine, add = TRUE) plot(nf_edges, add = TRUE, border = \"brown\") ### Compute diversity raster (See Gonzalez-Moreno et al. 2011) sh <- calc(dist_raster, fun = function(x) {   1.7605 - 0.0932 * (sqrt(sqrt(x))) }) plot(sh) landscape1 <- landscape landscape1[landscape1 == 1] <- -100  s <- calc(stack(landscape1, sh),            fun = function(x) ifelse(x[1] == -100, (x[1] / -100) * x[2], NA)) plot(s) plot(borde_pine, add=TRUE) ### Scale the distance effect from 0 to 1 sh_scaled <- (s - cellStats(s, \"min\")) / (cellStats(s, \"max\") - cellStats(s, \"min\")) plot(sh_scaled) plot(borde_pine, add=TRUE)"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"past-land-use","dir":"Articles","previous_headings":"Compute initial richness > Pine plantation","what":"Past Land Use","title":"How diveRpine runs?. Detailed manual","text":"past land-use affects seed banks. study area, seedling regeneratio Quercus species within pine plantation depends past land-use, distance seed sources tree density (Gómez-Aparicio et al. 2009, Navarro-González et al. 2013). know regeneration Quercus pine plantations depends past land-use plantation tree density distance seed source (see table 2 Navarro-González et al. (2013)). quantify importance three variables, look values variance explained models variable. Subsequently, rescale importance variable obtain: Table 1: Rescaled importance varaibles. Navarro-González et al. (2013) Therefore, can say regeneration Quercus pine plantation followed next rule: \\[ reg \\sim 0.4767 \\cdot pastlandUse + 0.3204 \\cdot Distance + 0.2029 \\cdot Density  \\] consider past land-use, tree-density distance source considered hierarchical level. , need know contribution (importance) Quercus species richness found pine plantations. use data SINFONEVADA Forest inventory (Pérez-Luque et al. 2014). total richness observed SINFONEVADA plots, analyze much due contribution Quercus species Figure 9: Percentage Quercus species plot forest inventories Sierra Nevada (n = 600 plots; Pérez-Luque et al. 2014). Quercus contribute (average) richness plot 9 % (Figure 9), therefore, adjust contribution land use richness pine forest plots. richness value plantation conditioned past land use (Navarro-González et al. 2013), since probability finding recruits Quercus species within pine plantations depends past land use plantation. Navarro-González et al. (2013) differentiate probability finding regeneration pine plantation amount regeneration (number recruits) found within pine plantation. case, interested probability finding regeneration, rather abundance. Thus : probability finding regeneration within plantation varies function past land use. past land uses zero-inflated model (Navarro-González et al. 2013) estimates odds-ratio. values rescaled 0.0001 0.9999. computed inverse (1 - x) rescaled probability (convert probability finding regenerated). Thus : Table 2: Rescaled probability finding regeneration. Navarro-González et al. (2013) , rescaled probability finding regeneration function land use follows following gradient: Holm oak forest (0.9999) > Shrubland (0.4982) > Cropland (0.0279) > Grassland (0.0001). amount regenerated also depends past use (Navarro-González et al. 2013). model, amount regeneration affect richness, simply presence /absence regeneration, use rescaled probability finding regeneration include past land use. Note values distance average density 750 pines / ha.","code":"df <- read.csv(\"diversity_sinfonevada.csv\") # How many species by plot richness_loc <- df %>%   group_by(decimalLatitude, decimalLongitude) %>%    count() %>%    as.data.frame() %>%    tibble::rownames_to_column(var='id_plot') %>%   rename(rich = n)  # Get number of quercus species by plot  q <- df %>%   filter(grepl(\"Quercus\", scientificName)) %>%    group_by(decimalLatitude, decimalLongitude) %>%    count() %>%    as.data.frame() %>%    rename(rich_quercus = n)  # Get total richness by plot  richness_tot <- df %>%   group_by(decimalLatitude, decimalLongitude) %>%    count() %>%    as.data.frame() %>%    rename(rich_total = n)  per_quercus_plot <- richness_tot %>%    inner_join(q, by=c('decimalLatitude', 'decimalLongitude')) %>%    mutate(per = rich_quercus / rich_total)  per_quercus_plot %>% ggplot(aes(per)) + geom_histogram() +   xlab('% Quercus species by plot') + theme_minimal()"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"climate-proxy-variables","dir":"Articles","previous_headings":"Compute initial richness > Pine plantation","what":"Climate-proxy variables","title":"How diveRpine runs?. Detailed manual","text":"Climatic conditions important determinants species richness, particularly mountainous regions. study area (Sierra Nevada, southern Spain), Gómez-Aparicio et al. (2009) found effect climate conditions potential species richness within pine plantations. authors used 19 variables related climatic topographic conditions, applied principal components analysis (PCA), found elevation annual radiation variables correlated first two axes PCA (explaining 83.3 % variance) (See equation 2 Figures 5A-B Gómez-Aparicio et al. (2009)). found climate strong effect plant richness also potential regeneration. app, diveRpine, considered potential richness, effect climate conditions potential richness within pine plantations implemented using equation 2 Gómez-Aparicio et al. (2009), specifically: \\[\\mathrm{Climatic~effect}=\\mathrm{exp}\\left [-\\frac{1}{2}\\left ( \\frac{\\mathrm{Altitude }- \\mathrm{XA_0}}{\\mathrm{XA_b}} \\right )^{2}  \\right ] \\times ~\\mathrm{exp}\\left [-\\frac{1}{2}\\left ( \\frac{\\mathrm{Radiation }- \\mathrm{XR_0}}{\\mathrm{XR_b}} \\right )^{2}  \\right ]\\] \\(\\mathrm{XA_0}=1557.16\\), \\(\\mathrm{XA_b}=644.89\\), \\(\\mathrm{XR_0}=0\\), \\(\\mathrm{XR_b}=13.24\\) equation used default initRichess() argument fclim, used elevation (elev) radiation (rad) values specified user diveRpine app.","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"natural-forests-an-crops","dir":"Articles","previous_headings":"Compute initial richness","what":"Natural Forests an Crops","title":"How diveRpine runs?. Detailed manual","text":"natural forests crop pixels, initial richness value randomly selected specific richness range. Pixels belong Natural forest. Initial richness value pixel randomly selected specific richness range. specific range comes field inventories carry study area (Gómez-Aparicio et al. 2009, Pérez-Luque et al. 2014). Range: 13.72 - 16.11 Pixels belong Crops. Initial richness value pixel randomly selected specific richness range. specific range comes references (Mendoza et al. 2009, Matías et al. 2010) Range: 1 - 2 Table 3: Richness ranges values","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"initial-richness","dir":"Articles","previous_headings":"Compute initial richness","what":"Initial Richness","title":"How diveRpine runs?. Detailed manual","text":"initial Richness computed using function initRichness() can plotted using plot_richness() (Figure 10) Figure 10: Initial Richness landscape.","code":"# landscape()  # dist_raster() # ri_range (init params ) # den_pp()$den  # pastUse()  rasterRich <- initRichness(r = landscape,                             draster = dist_raster,                             r_range = r_range,                            treedensity = pp_den_den,                             pastUse = pp_use,                             elev = 1500,                             rad = 4,                            rescale = FALSE) plot_richness(rasterRich)"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"get-values-of-richness-for-nf-and-pine","dir":"Articles","previous_headings":"Compute initial richness","what":"Get values of Richness for NF and Pine","title":"How diveRpine runs?. Detailed manual","text":"used custom function compute mean, min max. function (summaryRaster()) takes raster compute mean, max min values cells. applied function compute Richness values Natural forests patches (Figures 11 12), Pine plantation target patch (Figures 13 14) (init end configuration). summary values displayed bottom-left side diveRpine app.","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"natural-forests-1","dir":"Articles","previous_headings":"Compute initial richness > Get values of Richness for NF and Pine","what":"Natural Forests","title":"How diveRpine runs?. Detailed manual","text":"Figure 11: Richness natural forests. Figure 12: Histogram richness natural forests mean, min max values natural forests showed value box bottom-left part app.","code":"rich_nf <- calc(   stack(landscape, rasterRich),    fun=function(x) ifelse(x[1] == nf_value, (x[1]/nf_value)*x[2], NA))  plot(rich_nf, axes=FALSE) dfnf<- drop_na(raster::as.data.frame(rich_nf))  dfnf %>%    ggplot(aes(layer)) + geom_histogram() +   theme_minimal() +    ylab(\"n pixels\") + xlab(\"Richness Value\") +    geom_vline(xintercept = mean(dfnf$layer)) +   ggtitle(\"Natural Forests\")"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"pine-plantation-1","dir":"Articles","previous_headings":"Compute initial richness > Get values of Richness for NF and Pine","what":"Pine plantation","title":"How diveRpine runs?. Detailed manual","text":"Figure 13: Initial Richness pine plantations. Figure 14: Histogram initial richness pine forests mean, min max values initial pine plantation showed value box bottom-left part app.","code":"pp_value <- 1  rich_pp <- calc(stack(landscape, rasterRich), fun=function(x) ifelse(x[1] == pp_value, x[1]*x[2], NA))  plot(rich_pp, axes=FALSE) dfpp<- drop_na(raster::as.data.frame(rich_pp)) dfpp %>%    ggplot(aes(layer)) + geom_histogram() +   theme_minimal() +    ylab(\"n pixels\") + xlab(\"Richness Value\") +    geom_vline(xintercept = mean(dfpp$layer)) +   ggtitle(\"Pine plantation\")"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"dispersal-module","dir":"Articles","previous_headings":"","what":"Dispersal module","title":"How diveRpine runs?. Detailed manual","text":"next step computed input seed propagules sources (natural forest) target pine plantation via dispersers (sensu Nathan et al. 2012). quantity quality seed dispersion influenced : Seed sources: seed diversity seed source patch, patch size Disperser: percentage disperser Landscape configuration","code":""},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"dispersers","dir":"Articles","previous_headings":"Dispersal module","what":"Dispersers","title":"How diveRpine runs?. Detailed manual","text":"considered three classes dispersers: small birds, e.g. European robin (Erithacus rubecula); Sardinian warbler (Sylvia melanocephala) medium birds, e.g. Eurasian jay (Garrulus glandarius) mammals, e.g. Red fox (Vulpes vulpes) type disperser, different dispersion kernels considered: Small-sized birds rarely exceed 100 m distance, approximately 50% seeds dispersed first 50 m (Jordano et al. 2007, Zamora et al. 2010). Medium-sized birds disperse 50% seeds distance 100 m (Jordano et al. 2007). Eurasyan jay shows dispersion range 5 1000 m Sierra Nevada mountains (SE Spain)(Gómez 2003). distance maximum dispersion occurs depends target patch, approximately 400 target patch pine plantation (Pons Pausas 2007). Mammals disperse range 0 1500 m, dispersion peak 650 - 700 m. 50% seeds dispersed mammals deposited distances greater 495 m (Matías et al. 2010). Table 4: Features dispersers Figure 15: Dispersion kernels used disperser diveRpine. According disperser type, potential_dispersion() function uses default different dispersion kernels. small medium birds log-normal dispersion kernels used. Specifically, log-normal density function mean standard deviation values \\(log(51)\\) \\(log(2)\\) respectively small-sized birds, log-normal density function mean standard deviation values \\(log(201)\\) \\(log(2)\\) medium-sized birds. distribution implemented using stats::dlnorm() function. mammals, combination log-normal Weibull dispersion kernel used. Specifically, 0 400 m distance seed source, Weibull distribution shape scale parameters 1.385 137 respectively used (See stats::dweibull()); whereas log-normal density function mean standard deviation values \\(log(751)\\) \\(log(1.346)\\) respectively, applied distances higher 401 m seed source. Different kernels functions specified using parameters kernel_sbi, kernel_mbi, kernel_ma within potential_dispersion() (see Advanced configuration article). natural forest patches, distance target pine plantation computed. instance, computed distance natural forest patch located bottom-left side landscape (Figure 4). , applied kernels disperser type using seed source values ((Figure 16). Figure 16: Distance natural forest patches virtual landscape. previously stated, used different functions compute kernels disperser kernel_sbi, kernel_mbi, kernel_ma. compute potential contribution propagules target pine plantation according richness values natural forest patches.","code":"x <- landscape # Get polygons of Natural forests  nf_edges <- raster::rasterToPolygons(x, fun=function(x){x == nf_value}, dissolve = TRUE) nf_patches <- sp::disaggregate(as(st_as_sf(nf_edges), \"Spatial\"))  i <- 2 # distance between nf polygong i and cells of the raster  d <- rgeos::gDistance(nf_patches[i,], methods::as(x,\"SpatialPoints\"), byid=TRUE) d_nfi <- x d_nfi[] <- apply(d, 1, min)*10 # compute minimun distance; and multiply by 10 meters   names(d_nfi) <- paste0(\"nf\", i) plot(d_nfi) plot(nf_patches[i,], add=TRUE) # Get the mean, sd, se richness of the nf patch   rich_nfi <- raster::mask(rich_nf, nf_patches[i,])  rich.mean <- raster::cellStats(rich_nfi, stat = \"mean\", na.rm=TRUE) rich.sd <- raster::cellStats(rich_nfi, stat = \"sd\", na.rm=TRUE) rich.se <- rich.sd/(sqrt(length(rich_nfi) - freq(rich_nfi, value=NA)))"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"small-birds-contribution","dir":"Articles","previous_headings":"Dispersal module > Dispersers","what":"Small birds contribution","title":"How diveRpine runs?. Detailed manual","text":"Figure 17: Potential contribution natural forest patches small birds disperser.","code":"## Small bird  sbi <- raster::calc(d_nfi, fun = function(x){dlnorm(x, meanlog = log(51), sdlog = .7)}) names(sbi) <- paste0('sb',i) ### potential contribution  sbipot <- stack(sbi*rich.mean, sbi*rich.sd, sbi*rich.se) names(sbipot) <- c(paste0(\"sbpot_\", i, \"_mean\"), paste0(\"sbpot_\", i, \"_sd\"), paste0(\"sbpot_\", i, \"_se\"))  plot(sbipot$sbpot_2_mean, main=\"Small birds\") plot(nf_patches[i,], add=TRUE) ## Medium bird  mbi <- raster::calc(d_nfi, fun = function(x){dlnorm(x, meanlog = log(201), sdlog = .7)}) names(mbi) <- paste0('mb',i) ### potential contribution  mbipot <- stack(mbi*rich.mean, mbi*rich.sd, mbi*rich.se) names(mbipot) <- c(paste0(\"mbpot_\", i, \"_mean\"), paste0(\"mbpot_\", i, \"_sd\"), paste0(\"mbpot_\", i, \"_se\"))  plot(mbipot$mbpot_2_mean, main=\"Medium birds\") plot(nf_patches[i,], add=TRUE) ## Mammals  mai <- raster::calc(d_nfi, fun = function(x){   ifelse(x <= 400,           dweibull(x, shape = 1.385, scale = 137),          dlnorm(x, meanlog = 6.621, sdlog = 0.297))}) names(mai) <- paste0('ma',i) ### potential contribution  maipot <- stack(mai*rich.mean, mai*rich.sd, mai*rich.se) names(maipot) <- c(paste0(\"mapot_\", i, \"_mean\"), paste0(\"mapot_\", i, \"_sd\"), paste0(\"mapot_\", i, \"_se\")) plot(maipot$mapot_2_mean, main=\"Mammals\") plot(nf_patches[i,], add=TRUE)"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"adjacency","dir":"Articles","previous_headings":"Dispersal module > Dispersers","what":"Adjacency","title":"How diveRpine runs?. Detailed manual","text":", natural forest patches adjacency pine-plantation target computed. higher adjacency natural forest pine plantation, lower limitation propagule entry dispersed birds. Zamora et al. (2010) found intercept slope linear relation seed limitation (values 0 1) adjacency (.e. percentage pine-plantation perimeter contact native forests) 0.733 0.0039 respectively. parameters included default function potential_dispersion(), customized using seedlim_int seedlim_slope parameters. natural forest patch, adjacency target pine-plantation computed. patches adjacency, potential dispersion birds increases according correction factor, computed follows: \\[adj_{fc} = 1 + \\frac{\\textrm{seed Entry} - \\textrm{seed Entry}_{0}}{\\textrm{seed Entry}_{100} - \\textrm{seed Entry}_{0}}\\] \\(\\textrm{seed Entry} = 1- \\textrm{seed limitation}\\); \\(\\textrm{seed limitation}\\) computed using seedlim_int seedlim_slope parameters; \\(\\textrm{seed Entry}_{0}\\) \\(\\textrm{seed Entry}_{100}\\) correspond seed entry adjacency full adjacency respectively (Zamora et al. 2010). instance, one natural forest patches, intersects target-pine plantation (Figure 18). adjacency natural forest patch pine plantation corresponds 0 % pine-plantation perimeter. natural forest patch, seed-entry computed following previous equation, factor correction applied input propagule. Figure 18: Example intersection pine plantation natural forest pacth. According literature, propagules input birds mammals mountain pine plantation study area representing 3.7 0.2 seeds m2 yr−1 respectively (Matías et al. 2010, Zamora et al. 2010). values specified server part app (see server.R; modify see Advanced configuration article). user determines percentage disperser type using slide bars diveRpine. values used weigths ponderate contribution disperser input propagule pine-plantation. , diserpser types configurated, potential input propagules pine plantation computed using potential_dispersion() input_propagule().output following (Figure 19). Figure 19: Potential entry propagules (propagules year) pine-plantation.","code":"plot(landscape) plot(pine, add=TRUE, border=\"black\") plot(nf_patches[patch_adjacente, ], border=\"brown\", add=TRUE) input$sb <- 20 input$mb <- 35  perma <- 100 - (input$sb + input$mb) pot_disp <- potential_dispersion(x = landscape, rich_nf = rich_nf,                                  nf_value = 2, pp_value = 1) pot_disp_pp <- input_propagule(x = landscape, pd = pot_disp, pp_value = 1) propagule_sb <- pot_disp_pp[['sb']] * as.numeric(input$sb) * piBird propagule_mb <- pot_disp_pp[['mb']] * as.numeric(input$mb) * piBird propagule_ma <- pot_disp_pp[['ma']] * as.numeric(perma) * piMammal  propagule <- raster::calc(stack(propagule_sb,                        propagule_mb,                        propagule_ma), sum) plot_propagule(propagule)"},{"path":"https://ajpelu.github.io/diveRpine/articles/detailed-manual.html","id":"simulation-and-computation-of-the-final-richness","dir":"Articles","previous_headings":"","what":"Simulation and computation of the final richness","title":"How diveRpine runs?. Detailed manual","text":"Finally, user can select length simulation (number years), diveRpine estimates quantity propagules input pixel pine plantation. , app calculates final richness considering initial richness values, propagule input, assuming existence plant establishment constraints mountain area (Mendoza et al. 2009, Matías et al. 2010, 2011, Quero et al. 2011). diveRpine generates map (Figure 20) end richness average values entire target pine plantation shown. Figure 20: Final Richness","code":"## Compute the input over time input$timeRange <- 30  sim <- propagule*input$timeRange  rich_pp_end <- calc(stack(rich_pp, sim), sum) rich_end <- raster::calc(stack(landscape, rasterRich, rich_pp_end),                  fun = function(x) ifelse(x[1] == pp_value, x[1]*x[3], x[2])) plot_richness(rich_end)"},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/articles/getting-started.html","id":"run-the-diverpine-app","dir":"Articles","previous_headings":"","what":"Run the diveRpine app","title":"Getting started diveRpine","text":"several ways run diveRpine app: Locally. recommended option use application. Download package diveRpine run locally (use Rstudio recommended). Steps: Download install diveRpine pkg using: Run app: , diveRpine launched brief introduction tutorial skipped. Online. Using shiny app deposited .","code":"# install.packages(\"remotes\") remotes::install_github(\"ajpelu/diveRpine\") library(\"diveRpine\") run_diveRpine()"},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/articles/supp-references.html","id":"supporting-references","dir":"Articles","previous_headings":"","what":"Supporting References","title":"Supporting references","text":"diveRpine built using data, results information scientific papers published peer-reviewed journals. manuscripts deal naturalization pine plantation forests Sierra Nevada mountain (Southern Spain), although references also used. get detailed information , see documentation functions created diveRpine. , present list main references used:","code":""},{"path":"https://ajpelu.github.io/diveRpine/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Antonio J. Pérez-Luque. Author, maintainer. Regino Zamora. Contributor.","code":""},{"path":"https://ajpelu.github.io/diveRpine/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pérez-Luque, Antonio J. Zamora, Regino (2023). diveRpine: diversification pine plantations Mediterranean mountains. R package version 1.2.0. https://doi.org/10.5281/zenodo.3697818","code":"@Manual{,   title = {diveRpine: diversification of pine plantations in Mediterranean mountains},   author = {Antonio J. Pérez-Luque and Regino Zamora},   year = {2023},   note = {R package version 1.3.0},   doi = {https://doi.org/10.5281/zenodo.3697818},   url = {https://ajpelu.github.io/diveRpine/}, }"},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/index.html","id":"diversification-of-pine-plantations-in-mediterranean-mountains","dir":"","previous_headings":"","what":"diveRsification of pine plantations in Mediterranean mountains","title":"Diversification of Pine Plantations","text":"diveRpine interactive R tool simulates way species diversity pine plantations varies depending landscape configuration, internal structure plantation (e.g. past land uses, tree density), composition dispersion vectors (e.g. birds, mammals). aim application develop decision-support tool simulates dynamics forest ecological processes.  application projects likely ecological succession stand based ecological context, visualizes relative importance different ecological mechanisms involved process. resulting simulations help manager identify forest stands need intervention (active restoration), compared stands intervention unneeded (passive restoration), depending ecosystem services manager wishes maximize. also allows user visualize complex ecological processes underlie diversification pine plantations Mediterranean mountain areas.  tool uses information published scientific journals synthetic straightforward way, enabling manager visualize different scenarios perform simulations based solid field data interpreted scientific contexts.","code":""},{"path":"https://ajpelu.github.io/diveRpine/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Diversification of Pine Plantations","text":"diveRpine built R, open source programming language using Shiny package, web application framework R. can download development version diveRpine GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ajpelu/diveRpine\")"},{"path":"https://ajpelu.github.io/diveRpine/index.html","id":"how-to-run-diverpine","dir":"","previous_headings":"","what":"How to run diveRpine","title":"Diversification of Pine Plantations","text":"recommended option use application download package run locally. can also use running example .","code":""},{"path":"https://ajpelu.github.io/diveRpine/index.html","id":"locally","dir":"","previous_headings":"How to run diveRpine","what":"Locally","title":"Diversification of Pine Plantations","text":"use Rstudio recommended Download install diveRpine pkg using: Run app: required code can found github repository.","code":"# install.packages(\"devtools\") devtools::install_github(\"ajpelu/diveRpine\") library(\"diveRpine\") run_diveRpine()"},{"path":"https://ajpelu.github.io/diveRpine/reference/create_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"create_landscape — create_landscape","title":"create_landscape — create_landscape","text":"Create empty landscape raster default value","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/create_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_landscape — create_landscape","text":"","code":"create_landscape(width, height, value)"},{"path":"https://ajpelu.github.io/diveRpine/reference/create_landscape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_landscape — create_landscape","text":"width, height dimension raster (ncells). Default values: width = 126 height = 106. value default value set pixels (value = 0)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/create_landscape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_landscape — create_landscape","text":"raster Object","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/create_landscape.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"create_landscape — create_landscape","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/dist2nf.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance to Natural forests — dist2nf","title":"Distance to Natural forests — dist2nf","text":"dist2nf computes distance target pine plantation surroundings natural forests patches.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/dist2nf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance to Natural forests — dist2nf","text":"","code":"dist2nf(x, nf_value)"},{"path":"https://ajpelu.github.io/diveRpine/reference/dist2nf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance to Natural forests — dist2nf","text":"x raster object nf_value value \"Natural Forests\" landscape class within raster (default value = 2).","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/dist2nf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance to Natural forests — dist2nf","text":"raster object minimum distance raster pixel","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/dist2nf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance to Natural forests — dist2nf","text":"auxiliary function calculates distance pixel target pine plantation edges surrounding natural forest patches. pixel, final value considered minimum distances pixel edges natural forests.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/dist2nf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance to Natural forests — dist2nf","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/diveRpine-package.html","id":null,"dir":"Reference","previous_headings":"","what":"diveRpine: Diversification of Pine Plantations — diveRpine-package","title":"diveRpine: Diversification of Pine Plantations — diveRpine-package","text":"Tool analyze different forest-management actions modify biodiversity-related ecosystem services Mediterranean mountain pine plantationsUse.","code":""},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/reference/diveRpine-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"diveRpine: Diversification of Pine Plantations — diveRpine-package","text":"Maintainer: Antonio J. Pérez-Luque ajpelu@gmail.com (ORCID) contributors: Regino Zamora rzamora@ugr.es (ORCID) [contributor]","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":null,"dir":"Reference","previous_headings":"","what":"Set values of Initial Richness — initRichness","title":"Set values of Initial Richness — initRichness","text":"function computes initial values richness values patch.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set values of Initial Richness — initRichness","text":"","code":"initRichness(   r,   draster,   r_range,   treedensity,   pastUse,   elev,   rad,   ftreeden,   fdist,   fclim,   w_past,   w_treeden,   w_clim,   w_dist,   rescale = TRUE )"},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set values of Initial Richness — initRichness","text":"r raster object configured landscape draster raster object values distance target patch natural forest patches. r_range data frame three columns: value land use (integer: 0 = \"\", 1 = \"Pine plantation\", 2 = \"Natural Forests\", 3 = \"Crop\"); lowRich upRich (lower upper value range Richness). treedensity density pine plantation (integer) pastUse past land use pine plantation (character). One \"Oak\", \"Shrubland\", \"Pasture\" \"Crop\". elev, rad elevation annual radiation pine plantation ftreeden, fdist, fclim functions used computed effect tree density (ftreeden), distance natural forest (fdist), climate-proxy variables (fclim) richness values within pine plantation. See details. w_dist, w_treeden, w_past, w_clim weights applied functions correct plant richness values according distance seed source, tree density, past-land use pine plantation, also climate-proxy variables pine plantation. rescale \"TRUE\" results rescaled (0 = min 1 = max)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set values of Initial Richness — initRichness","text":"raster object values initial richness pixel.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set values of Initial Richness — initRichness","text":"function computes initial plant richness land-use categories (e.g. target pine-plantation, surrounding natural forests, shrubland crops). land-use category, richness value pixels patches randomly calculated range potential richness values specified r_range. diveRpine, richness value patch classes calculated considering range possible values found study area (Sierra Nevada, southern Spain). Specifically: richness value assigned pixel. value depend pixel category.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"pine-plantation","dir":"Reference","previous_headings":"","what":"Pine plantation","title":"Set values of Initial Richness — initRichness","text":"richness values pixel focal (target) pine patch depends : Stand Features: tree density, patch size, past land-use, climate-proxy variables Distance seed source (landscape configuration) pixel j, initial richness value (\\(R_{init,j}\\)) computed $$Richess \\sim Potential\\ Richenss \\times fc$$ Potential Richenss random value coming r_range fc correction factor: $$fc = w_{past}\\cdot f(\\textrm{past~Land~Use}) + w_{dist}\\cdot f(\\textrm{Seed~source~distance}) + w_{treeden}\\cdot f(\\textrm{Tree~density}) + w_{clim}\\cdot f(\\textrm{Climate~proxy})$$ specified following weights according literature (see references): \\(w_{past}\\) = 0.2 \\(w_{dist}\\) = 0.35 \\(w_{treeden}\\) = 0.25 \\(w_{clim}\\) = 0.2 different weights can provided using w_past, w_dist,w_treeden, w_clim respectively. factors affecting richness within pine plantation pixel computed follows:","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"tree-density-ftreeden-","dir":"Reference","previous_headings":"","what":"Tree density (ftreeden)","title":"Set values of Initial Richness — initRichness","text":"Richness species diversity within pine plantation strongly conditioned tree density, negative effect plant diversity, total plant species richness. Potential richness affected function density, follows: $$\\textrm{ftreeden} = \\exp \\left(-\\frac{1}{2} \\left( \\frac{ \\textrm{treeDensity} - 0.22} {1504.1}\\right )^2\\right )$$ equation used default, change ftreeden. Tree density value specified treedensity.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"climate-proxy-factors","dir":"Reference","previous_headings":"","what":"Climate-proxy factors","title":"Set values of Initial Richness — initRichness","text":"Potential richness also strongly affected climate-proxy variables. determined 19 climatic topographical variables elevation annual radiation variables best explaining variability potential richness within pine-plantation (capturing 83.3 % observed variance). climate effect potential richness within pine-plantation modeled according following equation: $$\\textrm{fclim}=\\textrm{exp}\\left (-\\frac{1}{2}\\left ( \\frac{\\textrm{Altitude}- 1557.16}{644.89} \\right )^{2}  \\right ) \\times ~\\textrm{exp}\\left (-\\frac{1}{2}\\left ( \\frac{\\textrm{Radiation}}{13.24} \\right )^{2}  \\right )$$ equation used default, change fclim. Altitude radiation values specified elev rad.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"seed-source-distance-fdist-","dir":"Reference","previous_headings":"","what":"Seed source distance (fdist).","title":"Set values of Initial Richness — initRichness","text":"Seed dispersal depends distance seed source. pine plantations, presence abundance species pines determined, among others, distance seed source. Sierra Nevada (southern Spain) natural oak forests influential terms distance seed source. Oak vegetation higher plant diversity pine plantations, especially herbaceous species. Shorter distances increase pool species pine plantations reduce evenness plantation communities. relationship found distance source diversity observed pine plantations governed following equation: $$\\textrm{Diversity} = 1.7605 - 0.0932 * \\sqrt{\\sqrt{\\textrm{Distance}}}$$ equation used default, change fdist. pixel pine plantation distances centroid pixel edge natural forest patches computed using function dist2nf() generate distance raster (draster).","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"past-land-use","dir":"Reference","previous_headings":"","what":"Past Land Use","title":"Set values of Initial Richness — initRichness","text":"richness value plantation conditioned past land use. instance, found regeneration Quercus pine plantations depends past land-use plantation tree density distance seed source. Navarro-González et al. (2013), found probability finding regeneration within plantation varies function past land use. rescaled gradient found Navarro-González et al. (2013) follow:  natural forest (0.9999), Shrubland (0.4982), Cropland (0.0279), Grassland (0.0001). value \\(f(\\textrm{past Land Use})\\) selected according past land use specified pastUse.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"natural-forests-and-croplands","dir":"Reference","previous_headings":"","what":"Natural forests and Croplands","title":"Set values of Initial Richness — initRichness","text":"initial richness values pixel natural forest cropland patches randomly selected value ranges specified r_range.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set values of Initial Richness — initRichness","text":"Gómez-Aparicio L, Zavala MA, Bonet FJ, Zamora R (2009). “pine plantations valid tools restoring Mediterranean forests? assessment along abiotic biotic gradients.” Ecological Applications, 19(8), 2124--2141. doi:10.1890/08-1656.1 . Mendoza , Gómez-Aparicio L, Zamora R, Matías L (2009). “Recruitment limitation forest communities degraded Mediterranean landscape.” Journal Vegetation Science, 20(2), 367--376. doi:10.1111/j.1654-1103.2009.05705.x . González-Moreno P, Quero JL, Poorter L, Bonet FJ, Zamora R (2011). “spatial structure key promote plant diversity Mediterranean forest plantations?” Basic Applied Ecology, 12(3), 251--259. doi:10.1016/j.baae.2011.02.012 . Navarro-González , Pérez-Luque AJ, Bonet FJ, Zamora R (2013). “weight past: land-use legacies recolonization pine plantations oak trees.” Ecological Applications, 23(6), 1267--1276. doi:10.1890/12-0459.1 . Pérez-Luque AJ, Bonet FJ, Pérez-Pérez R, Aspizua R, Lorite J, Zamora R (2014). “Sinfonevada: Dataset floristic diversity Sierra Nevada forests (SE Spain).” PhytoKeys, 35, 1--15. doi:10.3897/phytokeys.35.6363 .","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/initRichness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set values of Initial Richness — initRichness","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/input_propagule.html","id":null,"dir":"Reference","previous_headings":"","what":"Seed input propagules into pine plantation — input_propagule","title":"Seed input propagules into pine plantation — input_propagule","text":"Compute propagule input target pine plantation.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/input_propagule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seed input propagules into pine plantation — input_propagule","text":"","code":"input_propagule(x, pd, pp_value)"},{"path":"https://ajpelu.github.io/diveRpine/reference/input_propagule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seed input propagules into pine plantation — input_propagule","text":"x raster object landscape configured pd raster stack object raster potential dispersion. See details. pp_value value \"pine plantation\" class within raster (default value = 1).","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/input_propagule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seed input propagules into pine plantation — input_propagule","text":"raster Object","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/input_propagule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seed input propagules into pine plantation — input_propagule","text":"auxiliary function masks raster generated potential_dispersion() function limits target pine plantation.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/input_propagule.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seed input propagules into pine plantation — input_propagule","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_landscape — plot_landscape","title":"plot_landscape — plot_landscape","text":"Plot landscape created user","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_landscape — plot_landscape","text":"","code":"plot_landscape(x, ...)"},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_landscape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_landscape — plot_landscape","text":"x raster object ... others arguments (ggplot2::ggplot2())","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_landscape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_landscape — plot_landscape","text":"ggplot2 Object","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_landscape.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plot_landscape — plot_landscape","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_propagule.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_propagule — plot_propagule","title":"plot_propagule — plot_propagule","text":"Plot input propagules target pine plantation","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_propagule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_propagule — plot_propagule","text":"","code":"plot_propagule(x, ...)"},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_propagule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_propagule — plot_propagule","text":"x raster object ... others arguments (ggplot2)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_propagule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_propagule — plot_propagule","text":"ggplot2 Object","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_propagule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_propagule — plot_propagule","text":"auxiliary function plot input propagules (number seeds pixel year) target pine plantation.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_propagule.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plot_propagule — plot_propagule","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_richness.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_richness — plot_richness","title":"plot_richness — plot_richness","text":"Plot richness values landscape created user","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_richness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_richness — plot_richness","text":"","code":"plot_richness(x, ...)"},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_richness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_richness — plot_richness","text":"x raster object ... others arguments (ggplot2)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_richness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_richness — plot_richness","text":"ggplot2 Object","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_richness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_richness — plot_richness","text":"auxiliary function plots plant richness values landscape landscape configured (see Compute Initial Richness button app), also final richness (Dispersers Simulation modules chosen user app). cases plot_richness plots plant richness pixel within landscape categories.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/plot_richness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plot_richness — plot_richness","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/potential_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the potential dispersion — potential_dispersion","title":"Compute the potential dispersion — potential_dispersion","text":"Compute propagule input patch target pine plantation using three classes disperses different kernels equations.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/potential_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the potential dispersion — potential_dispersion","text":"","code":"potential_dispersion(   x,   nf_value,   pp_value,   rich_nf,   kernel_sbi,   kernel_mbi,   kernel_ma,   seedlim_int,   seedlim_slope )"},{"path":"https://ajpelu.github.io/diveRpine/reference/potential_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the potential dispersion — potential_dispersion","text":"x raster object landscape configured nf_value value \"Natural Forests\" class within raster (default value = 2). pp_value value \"pine plantation\" class within raster (default value = 1). rich_nf raster object richness natural forests kernel_sbi, kernel_mbi, kernel_ma dispersion kernel functions small birds (kernel_sbi), medium birds (kernel_mbi) mammals (kernel_ma). See details. seedlim_int, seedlim_slope intercept slope linear relation seed limitation target plantation adjacency natural forest patch target pine plantation. See details","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/potential_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the potential dispersion — potential_dispersion","text":"raster objects values potential dispersion type disperser","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/potential_dispersion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the potential dispersion — potential_dispersion","text":"computes propagule input patch focal pine plantation using three classes disperses different kernels. quantity quality seed dispersion influenced : Seed sources: seed diversity seed source patch, patch size Disperses: percentage disperser type Landscape configuration Three classes disperses considered default study area: small birds, e.g. European robin (Erithacus rubecula), Sardinian warbler (Sylvia melanocephala) medium birds, e.g. Eurasian jay (Garrulus glandarius) mammals, e.g. Red fox (Vulpes vulpes) type disperser, different dispersion kernels considered: Small-sized birds rarely exceed 100 m distance, approximately 50% seeds dispersed first 50 m. Medium-sized birds disperse 50% seeds distance 100 m. Eurasyan jay shows dispersion range 5 1000 m Sierra Nevada mountains (SE Spain). distance maximum dispersion occurs depends target patch, approximately 400 m target patch pine plantation. Mammals disperse range 0 1500 m, dispersion peak 650 - 700 m. 50% seeds dispersed mammals deposited distances greater 495 m. According disperser type, function uses default different dispersion kernels. small medium birds log-normal dispersion kernels used. Specifically, log-normal density function mean standard deviation values log(51) log(2) respectively small-sized birds, log-normal density function mean standard deviation values log(201) log(2) medium-sized birds. distribution implemented using stats::dlnorm() function. mammals, combination log-normal Weibull dispersion kernel used. Specifically, 0 400 m distance seed source, Weibull distribution shape scale parameters 1.385 137 respectively used (See stats::dweibull()); whereas log-normal density function mean standard deviation values log(751) log(1.346) respectively, applied distances higher 401 m seed source. Different kernels functions specified using parameters kernel_sbi, kernel_mbi, kernel_ma. function also considers adjacency natural forest patches target pine plantation. higher adjacency natural forest pine plantation, lower limitation propagule entry dispersed birds. Zamora et al. (2010) found intercept slope linear relation seed limitation (values 0 1) adjacency (.e. percentage pine-plantation perimeter contact native forests) 0.733 0.0039 respectively. parameters included default, customized using seedlim_int seedlim_slope parameters. natural forest patch, adjacency target pine-plantation computed. patches adjacency, potential dispersion birds increases according correction factor (see Zamora et al. 2010), computed follows: \\(adj_{fc} = 1 + \\frac{\\textrm{seed Entry} - \\textrm{seed Entry}_{0}}{\\textrm{seed Entry}_{100} - \\textrm{seed Entry}_{0}}\\) \\(\\textrm{seed Entry} = 1- \\textrm{seed limitation}\\); \\(\\textrm{seed limitation}\\) computed using seedlim_int seedlim_slope parameters; \\(\\textrm{seed Entry}_{0}\\) \\(\\textrm{seed Entry}_{100}\\) correspond seed entry adjacency full adjacency respectively (see Zamora et al. 2010).","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/potential_dispersion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the potential dispersion — potential_dispersion","text":"Gómez JM (2003). “Spatial patterns long-distance dispersal Quercus ilex acorns jays heterogeneous landscape.” Ecography, 26(5), 573--584. doi:10.1034/j.1600-0587.2003.03586.x . González-Varo JP, López-Bao JV, Guitián J (2013). “Functional diversity among seed dispersal kernels generated carnivorous mammals.” Journal Animal Ecology, 82(3), 562--571. doi:10.1111/1365-2656.12024 . Jordano P, García C, Godoy JA, García-Castaño JL (2007). “Differential contribution frugivores complex seed dispersal patterns.” Proceedings National Academy Sciences, 104(9), 3278--3282. doi:10.1073/pnas.0606793104 , http://www.pnas.org/content/104/9/3278.abstract. Matías L, Zamora R, Mendoza , Hódar JA (2010). “Seed dispersal patterns large frugivorous mammals degraded mosaic landscape.” Restoration Ecology, 18(5), 619--627. doi:10.1111/j.1526-100X.2008.00475.x . Pons J, Pausas JG (2007). “Acorn dispersal estimated radio-tracking.” Oecologia, 153(4), 903--911. doi:10.1007/s00442-007-0788-x . Zamora R, Hódar JA, Matías L, Mendoza (2010). “Positive adjacency effects mediated seed disperser birds pine plantations.” Ecological Applications, 20(4), 1053--1060. doi:10.1890/09-0055.1 .","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/potential_dispersion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the potential dispersion — potential_dispersion","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/run_diveRpine.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the diveRpine Shiny Application — run_diveRpine","title":"Run the diveRpine Shiny Application — run_diveRpine","text":"run_diveRpine executes diveRpine shiny app","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/run_diveRpine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the diveRpine Shiny Application — run_diveRpine","text":"","code":"run_diveRpine()"},{"path":"https://ajpelu.github.io/diveRpine/reference/summaryRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"summaryRaster — summaryRaster","title":"summaryRaster — summaryRaster","text":"Compute custom summary stats specific raster","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/summaryRaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summaryRaster — summaryRaster","text":"","code":"summaryRaster(x)"},{"path":"https://ajpelu.github.io/diveRpine/reference/summaryRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summaryRaster — summaryRaster","text":"x raster object function computes mean, min, max, standard deviation specific raster. statistics rounded 2 digits.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/summaryRaster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summaryRaster — summaryRaster","text":"list mean, min, max, sd.","code":""},{"path":"https://ajpelu.github.io/diveRpine/reference/summaryRaster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"summaryRaster — summaryRaster","text":"Antonio J Pérez-Luque (ajpelu@gmail.com)","code":""},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/news/index.html","id":"general-comments-1-2-0","dir":"Changelog","previous_headings":"","what":"General comments","title":"diveRpine 1.2.0","text":"Add new vignette packages used develop diveRpine.","code":""},{"path":"https://ajpelu.github.io/diveRpine/news/index.html","id":"major-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"diveRpine 1.2.0","text":"Init parameters: init_params.R script removed app. parameters located different functions files. new function create_landscape() creates empty landscape old nf_value specified init_params set default 2 functions dist2nf(), potential_dispersion(). old pp_value specified init_params set default 1 functions potential_dispersion(), input_progagule(). block code initialize parameters added server.R shinyapp. ri_range, .e. minimum maximum values plant richness landscape class incorporated function initRichness(). app default values dataframe used study area (Sierra Nevada, southern Spain). documentation functions updated improved. new module implemented app incorporate climate-proxy functions, using equation Gómez-Aparicio et al. (2009) Several vignettes added containing detailed manual diveRpine runs.","code":""},{"path":"https://ajpelu.github.io/diveRpine/news/index.html","id":"minor-improvements-and-bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"diveRpine 1.2.0","text":"fix minor typo code comments functions Evaluates set default arguments dist2nf(), initRichness(), input_progagule(), potential_dispersion(). Improve vignette supporting references (using .bib file).","code":""},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/news/index.html","id":"general-comments-1-1-0","dir":"Changelog","previous_headings":"","what":"General comments","title":"diveRpine 1.1.0","text":"Remove functions createLandscape(), disper(), disper_time(). Put functions code snippets shiny app. Include new functions: plot_landscape(), plot_progagule(); plot_richness(), potential_dispersion() Add error standards richness values pine plantation Include new computation code dispersion module. See potential_dispersion().","code":""},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/news/index.html","id":"general-comments-1-0-1","dir":"Changelog","previous_headings":"","what":"General comments","title":"diveRpine 1.0.1","text":"Change name diveRpine (diversification pine plantation) Improve documentation functioms Add namespace several functions, e.g.: () methods::()","code":""},{"path":"https://ajpelu.github.io/diveRpine/news/index.html","id":"minor-improvements-and-bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"diveRpine 1.0.1","text":"fix minor typo code comments initRichness.R createLandscape.R: remove code block commented improve code styling improve code comments change ratify factor levels Improve function documentation","code":""},{"path":[]},{"path":"https://ajpelu.github.io/diveRpine/news/index.html","id":"general-comments-1-0-0","dir":"Changelog","previous_headings":"","what":"General comments","title":"diveRpine 1.0.0","text":"Release app academic purposes (respineDocencia)","code":""}]
